<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MemberDAO">
	<resultMap id="member" type="member">
		<id property="m_no" column="M_NO" />
		<result property="m_id" column="M_ID" />
		<result property="m_pwd" column="M_PWD" />
		<result property="m_name" column="M_NAME" />
		<result property="m_email" column="M_EMAIL" />
		<result property="m_birth" column="M_BIRTH" />
		<result property="m_phone" column="M_PHONE" />
		<result property="m_addr" column="M_ADDR" />
		<result property="m_regdate" column="M_REGDATE" />
	</resultMap>

	<select id="checkID" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM MEMBER
		WHERE M_ID=#{m_id}
	</select>
	
	<!-- 회원 존재 유무 확인 -->
	<select id="checkMember" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM MEMBER
		WHERE M_ID=#{m_id} AND M_PWD=#{m_pwd}
	</select>
	
	<!-- 회원가입하는 sql -->
	<insert id="insertMember">
		<![CDATA[
		INSERT INTO MEMBER (
			M_NO,
			M_ID, 
			M_PWD, 
			M_NAME, 
			M_EMAIL, 
			M_BIRTH, 
			M_PHONE, 
			M_ADDR
		) VALUES(
			MEMBER_SEQ.NEXTVAL, 
			#{m_id}, 
			#{m_pwd}, 
			#{m_name},
			#{m_email}, 
			TO_DATE(#{m_birth}, 'yyyy-mm-dd'), 
			#{m_phone},
			#{m_addr}
		)
		]]>
	</insert>
	
	<!-- 회원 수정 -->
	<update id="updateMember">
		UPDATE MEMBER
		SET
		M_PWD = #{m_pwd},
		M_EMAIL = #{m_email},
		M_PHONE = #{m_phone},
		M_ADDR = #{m_addr}
		WHERE
		M_ID = #{m_id}
	</update>
	
	<!-- 로그인 -->
	<select id="login" resultMap="member">
		<![CDATA[
			SELECT * FROM MEMBER
			WHERE M_ID=#{m_id} AND M_PWD=#{m_pwd}
		]]>
	</select>

	<!-- 회원 목록 -->
	<select id="getAll" resultMap="member">
		SELECT * FROM MEMBER
	</select>

	<!-- 회원 탈퇴 및 삭제-->
	<delete id="deleteMember">
		DELETE FROM MEMBER WHERE
		M_NO = #{m_no}
	</delete>
	
	<!-- 회원 정보 상세-->
	<select id="getMemberDetail" resultMap="member">
		<![CDATA[
			SELECT * FROM MEMBER WHERE M_NO = #{m_no}
		]]>
	</select>
	
	<!-- 회원 주문내역-->
	<select id="orderMember" resultType="payment">
		SELECT * FROM(
			SELECT ROWNUM AS RN, A.* FROM (
				SELECT * FROM (
					SELECT P_NO, PAY_NO, PAY_REGDATE, P_NAME, PAY_STATE,
					((P_PRICE - P_DISCOUNT) * PAY_QUANTITY) AS P_SUM
					FROM PAYMENT NATURAL JOIN PRODUCT WHERE M_NO = #{m_no}
					<include refid="myp"></include>
				) ORDER BY PAY_NO DESC
			) A
		) WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="getMemberList" resultType="member">
		SELECT * FROM(
			SELECT ROWNUM AS RN, A.* FROM (
				SELECT * FROM (
					SELECT M_NO, M_ID, M_NAME, M_BIRTH, M_PHONE, M_ADDR
					FROM MEMBER
					) ORDER BY M_NO DESC
			) A
		) WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="getCountMember" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM MEMBER
	</select>
	
	<select id="orderCount" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM PAYMENT WHERE M_NO = #{m_no}
	</select>
	
	<!-- 비밀번호 찾기 시 회원 확인 -->
	<select id="forgotPWChkMember" resultType="java.lang.String">
		SELECT M_EMAIL FROM MEMBER WHERE M_ID=#{m_id} AND M_NAME=#{m_name}
	</select>
	
	<!-- 회원 확인 후 비밀번호 업데이트 -->
	<update id="forgotPWUpdate">
		UPDATE MEMBER SET M_PWD=#{m_pwd} WHERE M_ID=#{m_id} AND M_NAME=#{m_name}
	</update>
	
	<!-- 마이페이지 상세내역 기준(3개월) -->
	<sql id="myp">
		AND PAY_REGDATE BETWEEN ADD_MONTHS(SYSDATE, -3) AND SYSDATE
	</sql>
	
</mapper>
